---
import { t } from "i18next";
import AngleLeft from "./icons/AngleLeft.astro";
import AngleRight from "./icons/AngleRight.astro";
import TitleSection from "./widgets/TitleSection.astro";

const images = await Astro.glob("/public/img/galeria/*").then(files => {
  return files.map(file => file.default);
});
---

<section class="flex flex-col justify-center items-center pt-16 md:pt-8 ">
  <TitleSection title={t("titulos.galeria")} />
  <div id="carousel-tabgha">
    <div>
      <div>
        <div class="carousel-container">
          {images.map(image => (
            <div class="item fade">
              <div class="image">
                <img src={image} alt="Galeria Tabgha" loading="lazy" class="skeleton" />
              </div>
            </div>
          ))}
          <a class="prev"><AngleLeft /></a>
          <a class="next"><AngleRight /></a>
        </div>
      </div>
    </div>
  </div>
</section>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".carousel-container").forEach((carousel) => {
      insertNumbers(carousel);

      carousel.querySelector(".prev").addEventListener("click", (e) => {
        minusItem(carousel);
      });

      carousel.querySelector(".next").addEventListener("click", () => {
        plusItem(carousel);
      });

      insertDots(carousel);

      carousel.querySelectorAll(".dot").forEach((dot) => {
        dot.addEventListener("click", (e) => {
          let item = Array.prototype.indexOf.call(
            e.target.parentNode.children,
            e.target
          );

          showItems(carousel, item);
        });
      });

      showItems(carousel, 0);
    });
  });

  function insertNumbers(carousel) {
    const length = carousel.querySelectorAll(".item").length;
    for (let i = 0; i < length; i++) {
      const nmbr = document.createElement("div");
      nmbr.classList.add("numbertext");
      nmbr.innerText = i + 1 + " / " + length;

      carousel.querySelectorAll(".item")[i].append(nmbr);
    }
  }

  function insertDots(carousel) {
    const dots = document.createElement("div");
    dots.classList.add("dots");

    carousel.append(dots);

    carousel.querySelectorAll(".item").forEach((elem) => {
      const dot = document.createElement("div");
      dot.classList.add("dot");

      carousel.querySelector(".dots").append(dot);
    });
  }

  function plusItem(carousel) {
    let item = currentItem(carousel);

    carousel
      .querySelectorAll(".item")
      [item].nextElementSibling.classList.contains("item")
      ? showItems(carousel, item + 1)
      : showItems(carousel, 0);
  }

  function minusItem(carousel) {
    let item = currentItem(carousel);

    carousel.querySelectorAll(".item")[item].previousElementSibling != null
      ? showItems(carousel, item - 1)
      : showItems(carousel, carousel.querySelectorAll(".item").length - 1);
  }

  function currentItem(carousel) {
    return [...carousel.querySelectorAll(".item")].findIndex(
      (item) => item.style.display == "block"
    );
  }

  function showItems(carousel, item) {
    if (carousel.querySelectorAll(".item")[currentItem(carousel)] != undefined)
      carousel.querySelectorAll(".item")[currentItem(carousel)].style.display =
        "none";
    carousel.querySelectorAll(".item")[item].style.display = "block";

    if (carousel.querySelector(".dot.active") != null)
      carousel.querySelector(".dot.active").classList.remove("active");
    carousel.querySelectorAll(".dot")[item].classList.add("active");
  }

  let lastInteraction = Date.now();
  document.querySelectorAll(".carousel-container").forEach((carousel) => {
    carousel.addEventListener("click", () => {
      lastInteraction = Date.now();
    });
  });

  setInterval(() => {
    if (Date.now() - lastInteraction > 3500) {
      plusItem(document.querySelector(".carousel-container"));
    }
  }, 5000);
</script>

<style is:inline>
  #carousel-tabgha {
    width: 100%;
    max-width: 1280px;
    padding: 2rem 0;
  }
  #carousel-tabgha .carousel-container {
    width: 100%;
    height: 30rem;
    padding: 0;
    position: relative;
    overflow: hidden;
    border-radius: 0.375rem;
  }
  #carousel-tabgha .carousel-container .item {
    width: 100%;
    height: 100%;
    position: relative;
    display: none;
    animation: fade 0.6s ease-in-out;
  }
  #carousel-tabgha .carousel-container .item .numbertext {
    padding: 0.5rem 0.75rem;
    position: absolute;
    top: 1rem;
    right: 1rem;
    border-radius: 0.9375rem;
    font-size: 0.875rem;
    color: #f2f2f2;
    background-color: rgba(0, 0, 0, 0.250);
  }
  #carousel-tabgha .carousel-container .item .image {
    width: 100%;
    height: 100%;
    display: flex;
  }
  #carousel-tabgha .carousel-container .item .image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  #carousel-tabgha .carousel-container .item .text {
    width: 100%;
    padding: 0.625rem 0.9375rem;
    position: absolute;
    bottom: 0;
    font-size: 0.9rem;
    color: #f2f2f2;
    background-color: rgba(0, 0, 0, 0.9);
  }
  #carousel-tabgha .carousel-container .item .text .title {
    margin: 0.5rem 0 0 0;
    font-size: 1.2rem;
    font-weight: normal;
  }
  #carousel-tabgha .carousel-container .prev,
  #carousel-tabgha .carousel-container .next {
    width: 2rem;
    height: 2rem;
    padding: 0.3125rem;
    position: absolute;
    top: calc(50% - 1rem);
    user-select: none;
    font-size: 1rem;
    color: #f2f2f2;
    background-color: rgba(0, 0, 0, 0.200);
    border-radius: 50%;
    transition: 0.6s ease;
  }
  #carousel-tabgha .carousel-container .prev:focus,
  #carousel-tabgha .carousel-container .prev:hover,
  #carousel-tabgha .carousel-container .next:focus,
  #carousel-tabgha .carousel-container .next:hover {
    background-color: rgba(0, 0, 0, 0.5);
  }
  #carousel-tabgha .carousel-container .prev {
    left: 0.8rem;
  }
  #carousel-tabgha .carousel-container .next {
    right: 0.8rem;
  }
  #carousel-tabgha .carousel-container .dots {
    padding: 0.9375rem;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  #carousel-tabgha .carousel-container .dots .dot {
    width: 0.625rem;
    height: 0.625rem;
    margin: 0 0.125rem;
    display: inline-block;
    cursor: pointer;
    border-radius: 50%;
    background-color: #bbb;
    transition: background-color 0.6s ease;
  }
  #carousel-tabgha .carousel-container .dots .dot:focus,
  #carousel-tabgha .carousel-container .dots .dot:hover {
    background-color: #717171;
  }

  @keyframes fade {
    from {
      opacity: 0.8;
    }
    to {
      opacity: 1;
    }
  }
</style>
