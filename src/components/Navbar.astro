---
import i18next, { t } from "i18next";
import { localizePath } from "astro-i18next";
import  LanguageSelectorLOCAL  from "./LanguageSelector.astro";
import  {LanguageSelector}  from "astro-i18next/components";
import Flags from "./widgets/Flags.astro";

const { pathname } = Astro.url;

let homePath = localizePath('/', i18next.language);

const currentNormalizedPath = homePath.replace(/^\/+/g, "") === "" ? "es" : homePath.replace(/^\/+/g, "");

const isCurrentPath = (path) => {
    const { pathname } = Astro.url;
    const currentNormalizedPath = pathname.replace(/\/$/, "");
    path = path.replace(/\/$/, "");
    return currentNormalizedPath === path;
};

const navigationItems = {
    "/sentido/": t("navbar.sentido"),
    "/carta/": t("navbar.carta"),
    "/colabora/": t("navbar.colabora"),
    "/noticias/": t("navbar.noticias"),
    "/ubicacion/": t("navbar.ubicacion"),
    // "/contacto/": t("navbar.contacto"),
};

const validPathnames = ["/", "/ca", "/en", "/de"];

if (validPathnames.includes(pathname)) {
    homePath += `#${t('navbar.inicio')}`;
}
---

<nav class="absolute w-full z-10 bg-[#f7f6ef] bg-opacity-100 border-gray-200 px-2 sm:px-4 py-2.5 rounded-b">
    <div class="container flex flex-wrap items-center justify-between mx-auto">
        <a href={homePath} class="flex items-center">
            <img src="/img/tabgha-logo.svg" class="h-9 mr-3 ml-3 sm:h-9" alt="Tabgha Logo" />
            <span class="self-center text-xl font-semibold whitespace-nowrap md:hidden xl:block logoName">TABGHA</span>
        </a>
        <div class="bg-gray-300 p-1 rounded-full cursor-pointer flex items-center pl-3">
            <Flags country={currentNormalizedPath}/>
            <LanguageSelectorLOCAL showFlag={false} class="bg-gray-300 p-1 rounded-full cursor-pointer" />
        </div>
        <button data-collapse-toggle="navbar-default" type="button" class="inline-flex items-center p-2 ml-3 text-sm text-gray-500 rounded-lg md:hidden focus:outline-none focus:ring-2 focus:ring-gray-200" aria-controls="navbar-default" aria-expanded="false">
            <span class="sr-only">Menu</span>
            <svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path></svg>
        </button>
        <div class="hidden w-full md:block md:w-auto md:bg-opacity-10" id="navbar-default">
            <ul class="flex flex-col p-4 mt-4 border md:bg-transparent bg-white rounded-lg md:flex-row md:space-x-0 xl:space-x-6 md:mt-0 md:text-sm md:font-medium md:border-0">
                {
                    Object.keys(navigationItems).map((key) => {
                        let className = "py-2 px-4 xl:py-2 xl:px-4 uppercase text-sm underline-offset-2 tracking-wider decoration-4 font-semibold";
                        if (isCurrentPath(localizePath(key, i18next.language))) className += " underline decoration-tg-two";
                        else className += " opacity-80 hover:opacity-100 hover:underline decoration-gray-300";

                        if (validPathnames.includes(pathname)) {
                            return (
                                <li class="md:py-0 py-2">
                                    <a class={className} href={`#${navigationItems[key]}`}>
                                        {navigationItems[key]}
                                    </a>
                                </li>
                            );
                        }
                        else {
                            return (
                            <li class="md:py-0 py-2">
                                <a class={className} href={`${homePath}#${navigationItems[key]}`}>
                                    {navigationItems[key]}
                                </a>
                            </li>
                            );
                        }
                    })
                }
            </ul>
        </div>
    </div>
</nav>

<style>
    @media (max-width: 367px) {
        .logoName {
            display: none;
        }
    }
</style>

<script is:inline>
    document.addEventListener('DOMContentLoaded', function() {
        const collapse = document.querySelectorAll('[data-collapse-toggle]');
        collapse.forEach(function(el) {
            el.addEventListener('click', function() {
                const target = document.getElementById(this.getAttribute('aria-controls'));
                if (target) {
                    target.classList.toggle('hidden');
                    this.setAttribute('aria-expanded', target.classList.contains('hidden') ? 'false' : 'true');
                }
            });
        });
    });
</script>